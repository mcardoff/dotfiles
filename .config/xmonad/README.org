#+TITLE: Notes for Installing =xmonad=
* Note
This is adapted for my own personal use from the following tutorial on [[https://brianbuccola.com/how-to-install-xmonad-and-xmobar-via-stack/][installing xmonad via stack]]
* Getting Stack
Either use the package manager or follow the instructions on stack's site:
#+begin_example
curl -sSL https://get.haskellstack.org/ | sh
#+end_example
* Get GHC via Stack
Simply run the =stack setup= command
* Get repos for =xmonad=, =xmonad-contrib=, and =xmobar=
Change directories into your xmonad config directory, and clone the following repos:
#+begin_example
git clone "https://github.com/xmonad/xmonad" xmonad-git
git clone "https://github.com/xmonad/xmonad-contrib" xmonad-contrib-git
git clone "https://codeberg.org/xmobar/xmobar.git" xmobar-git
#+end_example
Stack will use the =yaml= and =cabal= files in these repos to find out what exactly to install, so we can tell stack to create a project here now
* Initialize Stack
Run the command:
#+begin_example
stack init
#+end_example
Go into =stack.yaml=, copy what is in this repo. 
* Build and install
Simply run
#+begin_example
stack install
#+end_example
And you should be good to go for all the stack related stuff
* Build file
Normally, =xmonad --recompile= uses direct ghc to recompile and restart xmonad, however, stack does not use this, simply make an _executable_ build file with the following:
#+begin_example
#!/bin/sh
exec stack ghc -- \
  --make xmonad.hs \
  -i \
  -ilib \
  -fforce-recomp \
  -main-is main \
  -v0 \
  -o "$1"
#+end_example
and then run =xmonad --recompile= to get it to function properly
* Updating
Running =stack install= will properly upgrade everything.

Running =stack clean= after adding new dependencies in =stack.yaml= may help 
